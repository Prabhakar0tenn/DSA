//Problem_link:- https://www.geeksforgeeks.org/problems/buy-stock-2/1

class Solution {
  
    public int maximumProfit(int prices[]) {
        int min=Integer.MAX_VALUE;
        int profit =0;
        for(int i=0;i<prices.length;i++){
            if(prices[i]-min>profit){
                profit=prices[i]-min;
            }
            if(prices[i]<min){
                min=prices[i];
            }
        }
        
             return profit;
         
        
    }
}


//unoptimised code below

//class Solution {
 //   public static int find(int prices[],int k){
  //      int max=prices[k];
 //       for(int i=k+1;i<prices.length;i++){
 //           if(max<prices[i]){
 //               max=prices[i];
 //           }
 //       }
 //       return max;
        
 //   }
 //   public int maximumProfit(int prices[]) {
  //       int flag=0;
 //        for(int i=0;i<prices.length-1;i++){
  //           if(prices[i+1]>prices[i]){
  //               flag=1;
                 
  //           }
  //       }
  //       int max_diff=0;
   //          if(flag==1){
                 
   //              for(int i=0;i<prices.length;i++){
   //                  if(max_diff<((find(prices,i))-prices[i])){
   //                      max_diff=find(prices,i)-prices[i];
   //                  }
   //              }
   //          }
   //          return max_diff;
         
        
 //   }
//}




