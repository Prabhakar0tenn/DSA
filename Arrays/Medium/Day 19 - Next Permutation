//Problem Link:- https://www.geeksforgeeks.org/problems/next-permutation5226/1

 //   Find the dip:
// Right se i dhoondo jahan arr[i] < arr[i+1]
// → (first element from right jahan increasing pattern break hota hai)

// Edge case:
// Agar i == -1, matlab array descending hai → reverse entire array

// Find next greater:
// Right se koi arr[j] > arr[i] dhoondo
// → (smallest number just greater than arr[i])

// Swap & reverse:
// Swap arr[i] and arr[j], then reverse suffix arr[i+1...end]
    


class Solution {
    
    public static void swap(int[] arr,int a, int b){
        int temp=arr[a];
        arr[a]=arr[b];
        arr[b]=temp;
    }
    
    public static void reverse(int[] arr,int start,int end ){
        while(start<end){
            int temp=arr[start];
            arr[start]=arr[end];
            arr[end]=temp;
            start++;
            end--;
        }
    }
    
    void nextPermutation(int[] arr) {
        
        int i=arr.length-2;
            
            while(i >= 0 && arr[i] >= arr[i + 1]){    // while (arr[i] >= arr[i+1] && i >= 0)
                                                     // ⚠️ Problem:
              i--;                                       // Java mein left-to-right evaluation hota hai

            }                                       // Toh arr[i] >= arr[i+1] pehle evaluate ho gaya jab i = -1 ho gaya tha → crash ho gaya.
                
            
        
        if(i==-1){
            reverse(arr,0,arr.length-1);
        }
        
        else{
            int pos =i;
            int min=Integer.MAX_VALUE;
            int next_pos=0;
            for(int k=pos+1;k<=arr.length-1;k++){
                if(arr[k]<min && arr[k]>arr[pos]){
                    min=arr[k];
                    next_pos=k;
                }
            }
            swap(arr,pos,next_pos);
            int start=pos+1; int end =arr.length-1;
            
            reverse(arr,start,end);
            
        }
        
    }
}
